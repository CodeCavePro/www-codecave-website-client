{"version":3,"file":"component---src-templates-post-tsx-63223e39a2fe8edea98f.js","mappings":"sJAOO,MAAMA,EAAkB,KAC7B,MAAMC,GAAcC,EAAAA,EAAAA,IAAeC,GAE7BC,GAAUC,EAAAA,EAAAA,GAASJ,EAAYK,KAAKC,iBAE1C,OACEC,EAAAA,cAAAA,EAAAA,SAAAA,KACGJ,EACCI,EAAAA,cAACC,EAAAA,EAAW,CACVC,MAAON,EACPO,IAAI,aACJC,UAAU,oCAEV,KACH,EA4BP,KAxBeC,IAQR,IARS,YACdC,EAAW,MACXC,EAAK,KACLC,GAKD,EACC,OACER,EAAAA,cAAAA,MAAAA,CACEI,UAAS,mDAAqDE,GAE9DN,EAAAA,cAACS,EAAAA,EAAgB,CACfL,UAAS,6DAETJ,EAAAA,cAACR,EAAe,MAChBQ,EAAAA,cAAAA,KAAAA,CAAII,UAAU,yCAAyCG,GACvDP,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,2BAA2BI,IAEtC,EAMH,MAAMb,EAAK,W,kGCdlB,UA7BaU,IAIsB,IAHjCK,MACEC,gBAAgB,YAAEC,EAAW,KAAEC,KAEL,EAC5B,MAAM,KAAEC,EAAI,OAAEC,EAAM,MAAER,GAAUK,EAEhC,OACEZ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACgB,EAAAA,GAAM,CACLV,YAAY,OACZC,MAAM,gBACNC,KAAK,wDAEPR,EAAAA,cAACS,EAAAA,EAAgB,CAACL,UAAU,YAC1BJ,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,4BACbJ,EAAAA,cAAAA,IAAAA,CAAGI,UAAS,wBAA2BU,GACvCd,EAAAA,cAAAA,IAAAA,CAAGI,UAAS,wBAA2BW,IAEzCf,EAAAA,cAAAA,KAAAA,CAAII,UAAU,yCAAyCG,GACvDP,EAAAA,cAAAA,MAAAA,CACEI,UAAU,0CACVa,wBAAyB,CAAEC,OAAQL,MAGtC,EAMA,MAAMM,EAAiCC,IAAA,IAC5CV,MACEC,gBACEC,aAAa,MAAEL,MAGpB,SAAKP,EAAAA,cAAAA,QAAAA,KAAO,kBAAgBO,EAAc,C","sources":["webpack://code-cave/./src/components/banner.tsx","webpack://code-cave/./src/templates/post.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport ContentContainer from \"./contentContainer\";\n\nexport const BackgroundImage = () => {\n  const bgImageData = useStaticQuery(query);\n\n  const bgImage = getImage(bgImageData.file.childImageSharp);\n\n  return (\n    <>\n      {bgImage ? (\n        <GatsbyImage\n          image={bgImage}\n          alt=\"background\"\n          className=\"absolute left-1/3 h-full w-full\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst Banner = ({\n  heightClass,\n  title,\n  text,\n}: {\n  heightClass: string;\n  title: string;\n  text: string;\n}) => {\n  return (\n    <div\n      className={`w-full bg-secondary-70 relative overflow-hidden ${heightClass}`}\n    >\n      <ContentContainer\n        className={`h-full flex-col items-left justify-center overflow-hidden`}\n      >\n        <BackgroundImage />\n        <h2 className=\"text-bold text-7xl text-main-100 mb-8\">{title}</h2>\n        <p className=\"max-w-xl w-full text-lg\">{text}</p>\n      </ContentContainer>\n    </div>\n  );\n};\n\nexport default Banner;\n\nexport const query = graphql`\n  query {\n    file(sourceInstanceName: { eq: \"common\" }, name: { eq: \"banner\" }) {\n      childImageSharp {\n        gatsbyImageData(formats: [AUTO, AVIF, WEBP], placeholder: BLURRED)\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { HeadFC, PageProps, graphql } from \"gatsby\";\n\nimport { IPostQueryResult } from \"../types/post.type\";\n\nimport ContentContainer from \"../components/contentContainer\";\nimport Banner from \"../components/banner\";\n\nconst Post = ({\n  data: {\n    markdownRemark: { frontmatter, html },\n  },\n}: PageProps<IPostQueryResult>) => {\n  const { date, author, title } = frontmatter;\n\n  return (\n    <>\n      <Banner\n        heightClass=\"h-96\"\n        title=\"CodeCave blog\"\n        text=\"Awesome blog provides important information for you\"\n      />\n      <ContentContainer className=\"flex-col\">\n        <div className=\"flex justify-between p-8\">\n          <p className={`text-xl text-main-10`}>{date}</p>\n          <p className={`text-xl text-main-10`}>{author}</p>\n        </div>\n        <h2 className=\"text-main-100 text-4xl font-bold pb-8\">{title}</h2>\n        <div\n          className=\"single-post text-main-70 text-2xl pb-10\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default Post;\n\nexport const Head: HeadFC<IPostQueryResult> = ({\n  data: {\n    markdownRemark: {\n      frontmatter: { title },\n    },\n  },\n}) => <title>CodeCave blog: {title}</title>;\n\nexport const query = graphql`\n  query ($id: String) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        author\n        date(formatString: \"MMM DD, YYYY\")\n        title\n      }\n      html\n    }\n  }\n`;\n"],"names":["BackgroundImage","bgImageData","useStaticQuery","query","bgImage","getImage","file","childImageSharp","React","GatsbyImage","image","alt","className","_ref","heightClass","title","text","ContentContainer","data","markdownRemark","frontmatter","html","date","author","Banner","dangerouslySetInnerHTML","__html","Head","_ref2"],"sourceRoot":""}