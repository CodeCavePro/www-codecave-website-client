{"version":3,"file":"component---src-templates-projects-tsx-f646affc6090735460e9.js","mappings":"kIA2BA,IAvBeA,IAQR,IARS,YACdC,EAAc,QAAO,MACrBC,EAAK,KACLC,GAKD,EACC,OACEC,EAAAA,cAAAA,MAAAA,CACEC,UAAS,+CAAiDJ,GAE1DG,EAAAA,cAACE,EAAAA,EAAgB,CACfD,UAAS,gFAETD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,6CAA6CH,GAC3DE,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,uCAAuCF,IAElD,C,wDC+BV,IAhDmBH,IAUZ,IAVa,QAClBO,EAAO,cACPC,EAAa,YACbC,EAAW,UACXJ,GAMD,EACC,MAAMK,EAAQC,MAAMC,KAAK,CAAEC,OAAQL,IAAiB,CAACM,EAAGC,IAAMA,EAAI,IAC5DC,EAAWP,EAAc,EAE/B,OACEL,EAAAA,cAAAA,MAAAA,CAAKC,UAAS,gCAAkCA,GAC9CD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kFACZI,EAAcD,EACbJ,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAE,IAAMX,EAAO,SAASS,GAC5BZ,EAAAA,cAACe,EAAAA,EAAM,CAACC,KAAK,QAAQC,QAAQ,OAAOhB,UAAU,SAAQ,cAItD,MAEND,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qDACZG,EAAgB,EACbE,EAAMY,KAAKC,GACTnB,EAAAA,cAACa,EAAAA,GAAI,CACHO,IAAG,mBAAqBD,EACxBL,GAAE,IAAMX,EAAO,SAASgB,GAExBnB,EAAAA,cAACe,EAAAA,EAAM,CACLC,KAAK,QACLC,QAASE,IAASd,EAAc,OAAS,QACzCgB,OAAQF,IAASd,EACjBJ,UAAU,aAETkB,MAIP,MAEF,C,sHCDV,UArCiBvB,IAGyC,IAHxC,KAChB0B,EAAI,YACJC,GACmD,EACnD,MAAMC,EAAWF,EAAKG,kBAAkBC,OAClC,YAAErB,EAAW,cAAED,GAAkBmB,EAEvC,OACEvB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC2B,EAAAA,EAAM,CACL9B,YAAY,OACZC,MAAM,oBACNC,KAAK,+BAEPC,EAAAA,cAACE,EAAAA,EAAgB,CAACD,UAAU,8BAC1BD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iCACZuB,EACGA,EAASN,KAAKU,GACZ5B,EAAAA,cAAC6B,EAAAA,EAAc,CACbT,IAAKQ,EAAQE,GACbF,QAASA,EACTG,MAAM,OACN9B,UAAU,2CAGd,MAEND,EAAAA,cAACgC,EAAAA,EAAU,CACT7B,QAAS,WACTC,cAAeA,EACfC,YAAaA,KAGhB,EAMA,MAAM4B,EAAe,IAAMjC,EAAAA,cAAAA,QAAAA,KAAO,oB","sources":["webpack://code-cave/./src/components/banner.tsx","webpack://code-cave/./src/components/pagination.tsx","webpack://code-cave/./src/templates/projects.tsx"],"sourcesContent":["import React from \"react\";\n\nimport ContentContainer from \"./contentContainer\";\n\nconst Banner = ({\n  heightClass = \"h-160\",\n  title,\n  text,\n}: {\n  heightClass?: string;\n  title: string;\n  text: string;\n}) => {\n  return (\n    <div\n      className={`w-full bg-main-100 relative overflow-hidden ${heightClass}`}\n    >\n      <ContentContainer\n        className={`h-full flex-col items-left justify-center overflow-hidden text-secondary-100`}\n      >\n        <h2 className=\"font-['Rubik_Glitch'] text-6xl mb-8 w-2/5\">{title}</h2>\n        <p className=\"max-w-xl w-full text-4xl font-light\">{text}</p>\n      </ContentContainer>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport Button from \"./button\";\n\nconst Pagination = ({\n  section,\n  pagesQuantity,\n  currentPage,\n  className,\n}: {\n  section: \"projects\" | \"blog\";\n  pagesQuantity: number;\n  currentPage: number;\n  className?: string;\n}) => {\n  const pages = Array.from({ length: pagesQuantity }, (_, i) => i + 1);\n  const nextPage = currentPage + 1;\n\n  return (\n    <div className={`my-8 grid grid-cols-3 w-full ${className}`}>\n      <div className=\"col-start-1 col-span-2 lg:col-start-2 lg:col-span-1 w-full flex justify-center\">\n        {currentPage < pagesQuantity ? (\n          <Link to={`/${section}/page/${nextPage}`}>\n            <Button size=\"large\" variant=\"dark\" className=\"w-max\">\n              Next page\n            </Button>\n          </Link>\n        ) : null}\n      </div>\n      <nav className=\"col-start-3 col-span-1 w-full flex justify-center\">\n        {pagesQuantity > 1\n          ? pages.map((page) => (\n              <Link\n                key={`pagination-link-${page}`}\n                to={`/${section}/page/${page}`}\n              >\n                <Button\n                  size=\"small\"\n                  variant={page === currentPage ? \"dark\" : \"light\"}\n                  border={page !== currentPage}\n                  className=\"mx-[-1px]\"\n                >\n                  {page}\n                </Button>\n              </Link>\n            ))\n          : null}\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nimport { HeadFC, PageProps } from \"gatsby\";\nimport { graphql } from \"gatsby\";\n\nimport { IProjectsPageContext, IProjectsPageData } from \"../types/project.type\";\n\nimport Banner from \"../components/banner\";\nimport ContentContainer from \"../components/contentContainer\";\nimport ProjectPreview from \"../components/projectPreview\";\nimport Pagination from \"../components/pagination\";\n\nconst Projects = ({\n  data,\n  pageContext,\n}: PageProps<IProjectsPageData, IProjectsPageContext>) => {\n  const projects = data.allMarkdownRemark.nodes;\n  const { currentPage, pagesQuantity } = pageContext;\n\n  return (\n    <>\n      <Banner\n        heightClass=\"h-96\"\n        title=\"CodeCave projects\"\n        text=\"Our super amazing projects\"\n      />\n      <ContentContainer className=\"flex-col items-center p-12\">\n        <div className=\"flex flex-wrap justify-center\">\n          {projects\n            ? projects.map((project) => (\n                <ProjectPreview\n                  key={project.id}\n                  project={project}\n                  theme=\"dark\"\n                  className=\"basis-full md:basis-3/4 lg:basis-2/5\"\n                />\n              ))\n            : null}\n        </div>\n        <Pagination\n          section={\"projects\"}\n          pagesQuantity={pagesQuantity}\n          currentPage={currentPage}\n        />\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default Projects;\n\nexport const Head: HeadFC = () => <title>CodeCave Projects</title>;\n\nexport const query = graphql`\n  query ($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"projects\" } } }\n      sort: { frontmatter: { date: DESC } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        id\n        frontmatter {\n          date(formatString: \"MMM DD, YYYY\")\n          title\n          text\n          stack\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                formats: [AUTO, WEBP, AVIF]\n                placeholder: BLURRED\n                width: 600\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","heightClass","title","text","React","className","ContentContainer","section","pagesQuantity","currentPage","pages","Array","from","length","_","i","nextPage","Link","to","Button","size","variant","map","page","key","border","data","pageContext","projects","allMarkdownRemark","nodes","Banner","project","ProjectPreview","id","theme","Pagination","Head"],"sourceRoot":""}