{"version":3,"file":"component---src-pages-index-tsx-daa8da8eff61ba104030.js","mappings":"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","sources":["webpack://code-cave/./src/components/banner.tsx","webpack://code-cave/./src/components/postPreview.tsx","webpack://code-cave/./src/components/clientsSection.tsx","webpack://code-cave/./src/components/review.tsx","webpack://code-cave/./src/components/reviewsSection.tsx","webpack://code-cave/./src/components/postSection.tsx","webpack://code-cave/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport ContentContainer from \"./contentContainer\";\n\nexport const BackgroundImage = () => {\n  const bgImageData = useStaticQuery(query);\n\n  const bgImage = getImage(bgImageData.file.childImageSharp);\n\n  return (\n    <>\n      {bgImage ? (\n        <GatsbyImage\n          image={bgImage}\n          alt=\"background\"\n          className=\"absolute left-1/3 h-full w-full\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst Banner = ({\n  heightClass,\n  title,\n  text,\n}: {\n  heightClass: string;\n  title: string;\n  text: string;\n}) => {\n  return (\n    <div\n      className={`w-full bg-secondary-70 relative overflow-hidden ${heightClass}`}\n    >\n      <ContentContainer\n        className={`h-full flex-col items-left justify-center overflow-hidden`}\n      >\n        <BackgroundImage />\n        <h2 className=\"text-bold text-7xl text-main-100 mb-8\">{title}</h2>\n        <p className=\"max-w-xl w-full text-lg\">{text}</p>\n      </ContentContainer>\n    </div>\n  );\n};\n\nexport default Banner;\n\nexport const query = graphql`\n  query {\n    file(sourceInstanceName: { eq: \"common\" }, name: { eq: \"banner\" }) {\n      childImageSharp {\n        gatsbyImageData(formats: [AUTO, AVIF, WEBP], placeholder: BLURRED)\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { IPostPreviewQueryResult } from \"../types/post.type\";\n\nconst PostPreview = ({\n  post,\n  className,\n  fontColor,\n}: {\n  post: IPostPreviewQueryResult;\n  className?: string;\n  fontColor: \"main\" | \"secondary\";\n}) => {\n  const cover = getImage(post.frontmatter.cover);\n  const { date, title, text } = post.frontmatter;\n\n  const fontColorClass100 =\n    fontColor === \"main\" ? \"text-main-100\" : \"text-secondary-100\";\n  const fontColorClass10 =\n    fontColor === \"main\" ? \"text-main-10\" : \"text-secondary-10\";\n  const fontColorHover =\n    fontColor === \"main\" ? \"hover:text-main-100\" : \"hover:text-secondary-100\";\n\n  return (\n    <Link\n      to={`/blog/post/${post.id}`}\n      className={`flex w-full ${fontColorClass10} ${fontColorHover} ${className}`}\n    >\n      <div className=\"hidden md:flex md:basis-1/3 shrink-0\">\n        {cover ? <GatsbyImage image={cover} alt={title} /> : null}\n      </div>\n      <div className=\"p-8 pl-12 flex flex-col basis-1/2 md:basis-1/3 shrink-0\">\n        <p className={`text-xl ${fontColorClass10} pb-8`}>{date}</p>\n        <h3 className={`text-4xl ${fontColorClass100}`}> {title} </h3>\n      </div>\n      <div className=\"flex flex-col justify-center basis-1/2 md:basis-1/3 shrink-0\">\n        <p className={`text-xl ${fontColorClass10} pb-3`}>\n          {text.split(\" \").slice(0, 40).join(\" \")}...\n        </p>\n        <p className={`text-xl`}>READ MORE &#8594;</p>\n      </div>\n    </Link>\n  );\n};\n\nexport default PostPreview;\n","import React from \"react\";\n\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage, ImageDataLike, getImage } from \"gatsby-plugin-image\";\n\nimport useEmblaCarousel from \"embla-carousel-react\";\nimport Autoplay from \"embla-carousel-autoplay\";\n\nimport { ILogosQueryResult } from \"../types/client.type\";\n\nconst ClientsSection = () => {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, dragFree: true, duration: 10000, align: 0 },\n    [\n      Autoplay({\n        delay: 0,\n        stopOnInteraction: false,\n        stopOnMouseEnter: true,\n      }),\n    ]\n  );\n\n  const logosData = useStaticQuery(query);\n\n  const logosArr = (\n    logosData?.allFile?.nodes?.length\n      ? logosData.allFile.nodes.map((node: ImageDataLike & { id: string }) => ({\n          id: node.id,\n          img: getImage(node),\n        }))\n      : null\n  ) as ILogosQueryResult[] | null;\n\n  return (\n    <>\n      {logosArr?.length ? (\n        <section className={`h-36`} id=\"clients\">\n          <div className=\"h-full overflow-hidden\" ref={emblaRef}>\n            <div\n              className=\"h-full flex items-center\"\n              onMouseEnter={() => {\n                emblaApi?.internalEngine().animation.stop();\n              }}\n              onMouseLeave={() => {\n                emblaApi?.internalEngine().animation.start();\n              }}\n            >\n              {logosArr.map(({ id, img }) => (\n                <div\n                  key={id}\n                  className=\"h-full shrink-0 min-w-0 basis-1/3 sm:basis-1/4 md:basis-2/6 lg:basis-1/6 p-12 cursor-pointer flex items-center content-center grayscale\"\n                >\n                  {<GatsbyImage image={img} alt=\"logo\" />}\n                </div>\n              ))}\n            </div>\n          </div>\n        </section>\n      ) : null}\n    </>\n  );\n};\n\nexport default ClientsSection;\n\nexport const query = graphql`\n  query {\n    allFile(filter: { sourceInstanceName: { eq: \"clients\" } }) {\n      nodes {\n        childImageSharp {\n          gatsbyImageData(formats: [AUTO, AVIF, WEBP])\n        }\n        id\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { IReview } from \"../types/review.type\";\n\nconst Review = ({\n  data: { company, person, position, location, text, image },\n}: {\n  data: IReview;\n}) => {\n  const avatar = getImage(image);\n\n  return (\n    <div className=\"flex flex-row flex-nowrap p-6\">\n      <div className=\"basis-1/3 p-2 flex flex-col items-center\">\n        <div\n          className={`rounded-full h-28 w-28 mx-auto mb-8 overflow-hidden flex justify-center items-center`}\n        >\n          {avatar ? (\n            <GatsbyImage\n              image={avatar}\n              alt={company}\n              className=\"h-full object-cover\"\n            />\n          ) : null}\n        </div>\n        <h5 className=\"text-lg text-main-70\"> {person} </h5>\n        <h5 className=\"text-lg text-main-70\">\n          {position}, {company}\n        </h5>\n        <h5 className=\"text-lg text-main-70\"> {location} </h5>\n      </div>\n      <div className=\"shrink-0 basis-2/3 text-base text-main-70 p-2\">\n        {text}\n      </div>\n    </div>\n  );\n};\n\nexport default Review;\n","import React from \"react\";\n\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport useEmblaCarousel from \"embla-carousel-react\";\nimport Autoplay from \"embla-carousel-autoplay\";\n\nimport { IReviewsQueryResult } from \"../types/review.type\";\n\nimport Review from \"./review\";\n\nconst ReviewsSection = () => {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, dragFree: true, duration: 30000, align: 0 },\n    [\n      Autoplay({\n        delay: 0,\n        stopOnInteraction: false,\n        stopOnMouseEnter: true,\n      }),\n    ]\n  );\n\n  const reviewsData = useStaticQuery(query);\n\n  const reviews = (\n    reviewsData?.allMarkdownRemark?.nodes?.length\n      ? reviewsData.allMarkdownRemark.nodes\n      : null\n  ) as IReviewsQueryResult[] | null;\n\n  return (\n    <>\n      {reviews ? (\n        <section className=\"my-8\">\n          <div className=\"overflow-hidden\" ref={emblaRef}>\n            <div\n              id=\"container\"\n              className=\"flex items-center\"\n              onMouseEnter={() => {\n                emblaApi?.internalEngine().animation.stop();\n              }}\n              onMouseLeave={() => {\n                emblaApi?.internalEngine().animation.start();\n              }}\n            >\n              {reviews.map(({ id, frontmatter }) => (\n                <div\n                  key={id}\n                  className=\"h-full shrink-0 min-w-0 cursor-pointer flex items-center content-center border-2 border-main-70 border-solid basis-full sm:basis-5/6 md:basis-4/6 lg:basis-1/2 xl:basis-2/5 3xl:basis-1/3 4xl:basis-1/4 mx-[-1px]\"\n                >\n                  {<Review data={frontmatter} />}\n                </div>\n              ))}\n            </div>\n          </div>\n        </section>\n      ) : null}\n    </>\n  );\n};\n\nexport default ReviewsSection;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { fields: { sourceName: { eq: \"reviews\" } } }) {\n      nodes {\n        id\n        frontmatter {\n          company\n          location\n          person\n          position\n          text\n          image {\n            childImageSharp {\n              gatsbyImageData(\n                height: 112\n                placeholder: BLURRED\n                formats: [AUTO, AVIF, WEBP]\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\n\nimport { IPostPreviewQueryResult } from \"../types/post.type\";\n\nimport ContentContainer from \"./contentContainer\";\nimport PostPreview from \"./postPreview\";\n\nconst PostSection = () => {\n  const postData = useStaticQuery(query);\n\n  const post = (\n    postData?.allMarkdownRemark?.nodes?.length\n      ? postData.allMarkdownRemark.nodes[0]\n      : null\n  ) as IPostPreviewQueryResult | null;\n\n  return (\n    <>\n      {post ? (\n        <section className=\"w-full bg-main-100 text-secondary-100 py-20\">\n          <ContentContainer className=\"flex-col items-center\">\n            <div className=\"grid grid-cols-3 w-full items-center pb-10 md:pb-16\">\n              <h3 className=\"col-start-1 col-span-2 lg:col-start-2 lg:col-span-1 text-5xl font-bold\">\n                New in blog\n              </h3>\n              <Link\n                to=\"/blog\"\n                className=\"text-end text-2xl text-secondary-10 hover:text-secondary-100 cursor-pointer\"\n              >\n                ALL POSTS &#8594;\n              </Link>\n            </div>\n\n            <PostPreview post={post} fontColor=\"secondary\" />\n          </ContentContainer>\n        </section>\n      ) : null}\n    </>\n  );\n};\n\nexport default PostSection;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"posts\" } } }\n      sort: { frontmatter: { date: DESC } }\n      limit: 1\n    ) {\n      nodes {\n        id\n        frontmatter {\n          date(formatString: \"MMM DD, YYYY\")\n          author\n          title\n          text\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                formats: [AUTO, WEBP, AVIF]\n                placeholder: BLURRED\n                width: 600\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\n\nimport { IconContext } from \"@react-icons/all-files\";\nimport \"../styles/styles.css\";\n\nimport Banner from \"../components/banner\";\nimport ClientsSection from \"../components/clientsSection\";\nimport ReviewsSection from \"../components/reviewsSection\";\nimport PostSection from \"../components/postSection\";\nimport ProjectsSection from \"../components/projectsSection\";\n\nconst IndexPage = () => {\n  const bannerText =\n    \"Freelancers are usually temporary employees accessed in a last-minute panic. Freelancers feel no connection to the company and no responsibility. They don’t care about success of your project. For them, it  come and go. There is no other motivation for them, except for additional. Our company wants to begin an enduring B2B relationship with you and your. We take interest in your success and would love to help you achieve more of it.\";\n\n  return (\n    <IconContext.Provider value={{ style: { verticalAlign: \"middle\" } }}>\n      <Banner heightClass=\"h-160\" title=\"CodeCave\" text={bannerText} />\n      <ClientsSection />\n      <ProjectsSection />\n      <PostSection />\n      <ReviewsSection />\n    </IconContext.Provider>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>CodeCave</title>;\n"],"names":["BackgroundImage","bgImageData","useStaticQuery","query","bgImage","getImage","file","childImageSharp","React","GatsbyImage","image","alt","className","_ref","heightClass","title","text","ContentContainer","post","fontColor","cover","frontmatter","date","fontColorClass100","fontColorClass10","fontColorHover","Link","to","id","split","slice","join","emblaRef","emblaApi","useEmblaCarousel","loop","dragFree","duration","align","Autoplay","delay","stopOnInteraction","stopOnMouseEnter","logosData","logosArr","allFile","_logosData$allFile","nodes","_logosData$allFile$no","length","map","node","img","ref","onMouseEnter","internalEngine","animation","stop","onMouseLeave","start","key","data","company","person","position","location","avatar","reviewsData","reviews","allMarkdownRemark","_reviewsData$allMarkd","_reviewsData$allMarkd2","Review","postData","_postData$allMarkdown","_postData$allMarkdown2","PostPreview","IconContext","value","style","verticalAlign","Banner","ClientsSection","ProjectsSection","PostSection","ReviewsSection","Head"],"sourceRoot":""}