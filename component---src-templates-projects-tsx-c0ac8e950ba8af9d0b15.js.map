{"version":3,"file":"component---src-templates-projects-tsx-c0ac8e950ba8af9d0b15.js","mappings":"qJA6CA,IAvCeA,IAcR,IAdS,YACdC,EAAc,QAAO,MACrBC,EAAK,KACLC,EAAI,UACJC,EAAS,aACTC,EAAY,UACZC,GAQD,EACC,OACEC,EAAAA,cAAAA,MAAAA,CACEH,UAAS,oDAAsDH,EAAW,IAAIG,GAE7EE,EACCC,EAAAA,cAACC,IAAM,CAACJ,UAAU,yCAChB,KACJG,EAAAA,cAACE,EAAAA,EAAgB,CACfL,UAAS,gFAETG,EAAAA,cAAAA,KAAAA,CAAIH,UAAU,6FACXF,EAAMQ,eAETH,EAAAA,cAAAA,IAAAA,CAAGH,UAAU,6EACVD,EAAKO,gBAGTL,EACCE,EAAAA,cAACC,IAAM,CAACJ,UAAU,4CAChB,KACA,C,qECYV,IA/CmBJ,IAUZ,IAVa,QAClBW,EAAO,cACPC,EAAa,YACbC,EAAW,UACXT,GAMD,EACC,MAAMU,EAAQC,MAAMC,KAAK,CAAEC,OAAQL,IAAiB,CAACM,EAAGC,IAAMA,EAAI,IAC5DC,EAAWP,EAAc,EAE/B,OACEN,EAAAA,cAAAA,MAAAA,CAAKH,UAAS,oCAAsCA,GACjDS,EAAcD,EACbL,EAAAA,cAACc,EAAAA,GAAI,CAACC,GAAE,IAAMX,EAAO,SAASS,EAAYhB,UAAU,aAClDG,EAAAA,cAACgB,EAAAA,EAAM,CAACC,KAAK,QAAQC,QAAQ,OAAOrB,UAAU,SAAQ,cAItD,KAEJG,EAAAA,cAAAA,MAAAA,CAAKH,UAAU,2BACZQ,EAAgB,EACbE,EAAMY,KAAKC,GACTpB,EAAAA,cAACc,EAAAA,GAAI,CACHO,IAAG,mBAAqBD,EACxBL,GAAE,IAAMX,EAAO,SAASgB,GAExBpB,EAAAA,cAACgB,EAAAA,EAAM,CACLC,KAAK,QACLC,QAASE,IAASd,EAAc,OAAS,QACzCgB,OAAQF,IAASd,EACjBT,UAAU,aAETuB,MAIP,MAEF,C,mICAV,UArCiB3B,IAGyC,IAHxC,KAChB8B,EAAI,YACJC,GACmD,EACnD,MAAMC,EAAWF,EAAKG,kBAAkBC,OAClC,YAAErB,EAAW,cAAED,GAAkBmB,EAEvC,OACExB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC4B,EAAAA,EAAM,CACLlC,YAAY,OACZC,MAAM,oBACNC,KAAK,+BAEPI,EAAAA,cAACE,EAAAA,EAAgB,CAACL,UAAU,8BAC1BG,EAAAA,cAAAA,MAAAA,CAAKH,UAAU,iCACZ4B,EACGA,EAASN,KAAKU,GACZ7B,EAAAA,cAAC8B,EAAAA,EAAc,CACbT,IAAKQ,EAAQE,GACbF,QAASA,EACTG,MAAM,OACNnC,UAAU,2CAGd,MAENG,EAAAA,cAACiC,EAAAA,EAAU,CACT7B,QAAS,WACTC,cAAeA,EACfC,YAAaA,KAGhB,EAMA,MAAM4B,EAAe,IAAMlC,EAAAA,cAAAA,QAAAA,KAAO,oB,uBCnDzC,IAAIA,EAAQ,EAAQ,MAEpB,SAASC,EAAQkC,GACb,OAAOnC,EAAMoC,cAAc,MAAMD,EAAM,CAACnC,EAAMoC,cAAc,OAAO,CAAC,MAAQ,MAAM,OAAS,IAAI,OAAS,QAAQ,YAAc,IAAI,gBAAkB,MAAM,GAAK,IAAI,GAAK,OAAO,GAAK,IAAI,GAAK,IAAI,IAAM,IAAIpC,EAAMoC,cAAc,OAAO,CAAC,MAAQ,MAAM,OAAS,IAAI,OAAS,QAAQ,YAAc,IAAI,gBAAkB,MAAM,GAAK,IAAI,GAAK,OAAO,GAAK,IAAI,GAAK,IAAI,IAAM,KAC9W,CAEAnC,EAAOoC,aAAe,CAAC,OAAS,KAEhCC,EAAOC,QAAUtC,EAEjBA,EAAOuC,QAAUvC,C","sources":["webpack://code-cave/./src/components/banner.tsx","webpack://code-cave/./src/components/pagination.tsx","webpack://code-cave/./src/templates/projects.tsx","webpack://code-cave/./src/assets/common/border.svg"],"sourcesContent":["import React from \"react\";\n\nimport Border from \"../assets/common/border.svg\";\n\nimport ContentContainer from \"./contentContainer\";\n\nconst Banner = ({\n  heightClass = \"h-160\",\n  title,\n  text,\n  className,\n  borderBottom,\n  borderTop,\n}: {\n  heightClass?: string;\n  title: string;\n  text: string;\n  className?: string;\n  borderBottom?: boolean;\n  borderTop?: boolean;\n}) => {\n  return (\n    <div\n      className={`w-full bg-main-100 relative overflow-hidden px-6 ${heightClass} ${className}`}\n    >\n      {borderTop ? (\n        <Border className=\"absolute top-0 left-0 right-0 w-full\" />\n      ) : null}\n      <ContentContainer\n        className={`h-full flex-col items-left justify-center overflow-hidden text-secondary-100`}\n      >\n        <h2 className=\"font-['Rubik_Glitch'] text-5xl sm:text-6xl mb-8 w-full text-center md:text-start md:w-1/2\">\n          {title.toUpperCase()}\n        </h2>\n        <p className=\"w-full text-3xl sm:text-4xl font-light text-center md:text-start md:w-1/2\">\n          {text.toUpperCase()}\n        </p>\n      </ContentContainer>\n      {borderBottom ? (\n        <Border className=\"absolute bottom-0 left-0 right-0 w-full\" />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport Button from \"./button\";\n\nconst Pagination = ({\n  section,\n  pagesQuantity,\n  currentPage,\n  className,\n}: {\n  section: \"projects\" | \"blog\";\n  pagesQuantity: number;\n  currentPage: number;\n  className?: string;\n}) => {\n  const pages = Array.from({ length: pagesQuantity }, (_, i) => i + 1);\n  const nextPage = currentPage + 1;\n\n  return (\n    <div className={`my-8 flex justify-between w-full ${className}`}>\n      {currentPage < pagesQuantity ? (\n        <Link to={`/${section}/page/${nextPage}`} className=\"basis-1/2\">\n          <Button size=\"large\" variant=\"dark\" className=\"w-max\">\n            NEXT PAGE\n          </Button>\n        </Link>\n      ) : null}\n\n      <nav className=\"w-full flex justify-end\">\n        {pagesQuantity > 1\n          ? pages.map((page) => (\n              <Link\n                key={`pagination-link-${page}`}\n                to={`/${section}/page/${page}`}\n              >\n                <Button\n                  size=\"small\"\n                  variant={page === currentPage ? \"dark\" : \"light\"}\n                  border={page !== currentPage}\n                  className=\"mx-[-1px]\"\n                >\n                  {page}\n                </Button>\n              </Link>\n            ))\n          : null}\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nimport { HeadFC, PageProps } from \"gatsby\";\nimport { graphql } from \"gatsby\";\n\nimport { IProjectsPageContext, IProjectsPageData } from \"../types/project.type\";\n\nimport Banner from \"../components/banner\";\nimport ContentContainer from \"../components/contentContainer\";\nimport ProjectPreview from \"../components/projectPreview\";\nimport Pagination from \"../components/pagination\";\n\nconst Projects = ({\n  data,\n  pageContext,\n}: PageProps<IProjectsPageData, IProjectsPageContext>) => {\n  const projects = data.allMarkdownRemark.nodes;\n  const { currentPage, pagesQuantity } = pageContext;\n\n  return (\n    <>\n      <Banner\n        heightClass=\"h-96\"\n        title=\"CodeCave projects\"\n        text=\"Our super amazing projects\"\n      />\n      <ContentContainer className=\"flex-col items-center p-12\">\n        <div className=\"flex flex-wrap justify-center\">\n          {projects\n            ? projects.map((project) => (\n                <ProjectPreview\n                  key={project.id}\n                  project={project}\n                  theme=\"dark\"\n                  className=\"basis-full md:basis-3/4 lg:basis-2/5\"\n                />\n              ))\n            : null}\n        </div>\n        <Pagination\n          section={\"projects\"}\n          pagesQuantity={pagesQuantity}\n          currentPage={currentPage}\n        />\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default Projects;\n\nexport const Head: HeadFC = () => <title>CodeCave Projects</title>;\n\nexport const query = graphql`\n  query ($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"projects\" } } }\n      sort: { frontmatter: { date: DESC } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        id\n        frontmatter {\n          date(formatString: \"MMM DD, YYYY\")\n          title\n          text\n          stack\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                formats: [AUTO, WEBP, AVIF]\n                placeholder: BLURRED\n                width: 600\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","var React = require('react');\n\nfunction Border (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"line\",{\"width\":\"800\",\"height\":\"8\",\"stroke\":\"white\",\"strokeWidth\":\"8\",\"strokeDasharray\":\"8 8\",\"x1\":\"0\",\"x2\":\"150%\",\"y1\":\"4\",\"y2\":\"4\",\"key\":0}),React.createElement(\"line\",{\"width\":\"800\",\"height\":\"8\",\"stroke\":\"black\",\"strokeWidth\":\"8\",\"strokeDasharray\":\"8 8\",\"x1\":\"8\",\"x2\":\"150%\",\"y1\":\"4\",\"y2\":\"4\",\"key\":1})]);\n}\n\nBorder.defaultProps = {\"height\":\"8\"};\n\nmodule.exports = Border;\n\nBorder.default = Border;\n"],"names":["_ref","heightClass","title","text","className","borderBottom","borderTop","React","Border","ContentContainer","toUpperCase","section","pagesQuantity","currentPage","pages","Array","from","length","_","i","nextPage","Link","to","Button","size","variant","map","page","key","border","data","pageContext","projects","allMarkdownRemark","nodes","Banner","project","ProjectPreview","id","theme","Pagination","Head","props","createElement","defaultProps","module","exports","default"],"sourceRoot":""}