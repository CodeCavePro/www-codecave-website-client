{"version":3,"file":"component---src-templates-project-tsx-e4783e9dd86038c098cc.js","mappings":"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","sources":["webpack://code-cave/./src/components/carouselDotsButtonsArrows.tsx","webpack://code-cave/./src/components/screenshotsCarousel.tsx","webpack://code-cave/./src/templates/project.tsx"],"sourcesContent":["import React from \"react\";\n\nimport {\n  IDotButtonPropType,\n  IPrevNextButtonPropType,\n} from \"../types/carousel.type\";\n\nexport const DotButton = ({ selected, onClick }: IDotButtonPropType) => {\n  return (\n    <button\n      className={\"bg-transparent touch-manipulation inline-flex w-12 h-12 flex items-center mx-3 after:bg-main-10 after:w-full after:h-1.5 after:content-['']\".concat(\n        selected ? \" after:bg-main-100\" : \"\"\n      )}\n      type=\"button\"\n      onClick={onClick}\n    />\n  );\n};\n\nexport const PrevButton = ({ enabled, onClick }: IPrevNextButtonPropType) => {\n  return (\n    <button\n      className=\"bg-transparent touch-manipulation flex z-10 text-main-70 absolute flex items-center justify-center top-1/2 -translate-y-1/2 w-16 h-16 left-6 disabled:opacity-30\"\n      onClick={onClick}\n      disabled={!enabled}\n    >\n      <svg className=\"w-2/3 h-2/3\" viewBox=\"137.718 -1.001 366.563 644\">\n        <path\n          fill=\"currentColor\"\n          d=\"M428.36 12.5c16.67-16.67 43.76-16.67 60.42 0 16.67 16.67 16.67 43.76 0 60.42L241.7 320c148.25 148.24 230.61 230.6 247.08 247.08 16.67 16.66 16.67 43.75 0 60.42-16.67 16.66-43.76 16.67-60.42 0-27.72-27.71-249.45-249.37-277.16-277.08a42.308 42.308 0 0 1-12.48-30.34c0-11.1 4.1-22.05 12.48-30.42C206.63 234.23 400.64 40.21 428.36 12.5z\"\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport const NextButton = ({ enabled, onClick }: IPrevNextButtonPropType) => {\n  return (\n    <button\n      className=\"bg-transparent touch-manipulation flex z-10 text-main-70 absolute flex items-center justify-center top-1/2 -translate-y-1/2 w-16 h-16 right-6 disabled:opacity-30\"\n      onClick={onClick}\n      disabled={!enabled}\n    >\n      <svg className=\"w-2/3 h-2/3\" viewBox=\"0 0 238.003 238.003\">\n        <path\n          fill=\"currentColor\"\n          d=\"M181.776 107.719L78.705 4.648c-6.198-6.198-16.273-6.198-22.47 0s-6.198 16.273 0 22.47l91.883 91.883-91.883 91.883c-6.198 6.198-6.198 16.273 0 22.47s16.273 6.198 22.47 0l103.071-103.039a15.741 15.741 0 0 0 4.64-11.283c0-4.13-1.526-8.199-4.64-11.313z\"\n        />\n      </svg>\n    </button>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport useEmblaCarousel, { EmblaCarouselType } from \"embla-carousel-react\";\nimport Autoplay from \"embla-carousel-autoplay\";\n\nimport { IScreenshot } from \"../types/project.type\";\n\nimport { DotButton, PrevButton, NextButton } from \"./carouselDotsButtonsArrows\";\n\nconst ScreenshotsCarousel = ({\n  screenshots,\n}: {\n  screenshots: IScreenshot[];\n}) => {\n  const [emblaRef, emblaApi] = useEmblaCarousel({ loop: true }, [\n    Autoplay({\n      stopOnInteraction: false,\n      stopOnMouseEnter: true,\n    }),\n  ]);\n  const [prevBtnEnabled, setPrevBtnEnabled] = useState(false);\n  const [nextBtnEnabled, setNextBtnEnabled] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [scrollSnaps, setScrollSnaps] = useState<number[]>([]);\n\n  const scrollPrev = useCallback(\n    () => emblaApi && emblaApi.scrollPrev(),\n    [emblaApi]\n  );\n  const scrollNext = useCallback(\n    () => emblaApi && emblaApi.scrollNext(),\n    [emblaApi]\n  );\n  const scrollTo = useCallback(\n    (index: number) => emblaApi && emblaApi.scrollTo(index),\n    [emblaApi]\n  );\n\n  const onInit = useCallback((emblaApi: EmblaCarouselType) => {\n    setScrollSnaps(emblaApi.scrollSnapList());\n  }, []);\n\n  const onSelect = useCallback((emblaApi: EmblaCarouselType) => {\n    setSelectedIndex(emblaApi.selectedScrollSnap());\n    setPrevBtnEnabled(emblaApi.canScrollPrev());\n    setNextBtnEnabled(emblaApi.canScrollNext());\n  }, []);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n\n    onInit(emblaApi);\n    onSelect(emblaApi);\n    emblaApi.on(\"reInit\", onInit);\n    emblaApi.on(\"reInit\", onSelect);\n    emblaApi.on(\"select\", onSelect);\n  }, [emblaApi, onInit, onSelect]);\n\n  return (\n    <div className=\"h-full overflow-hidden relative\" ref={emblaRef}>\n      <div className=\"h-full flex items-center \">\n        {screenshots.map(({ id, childImageSharp }) => {\n          const img = getImage(childImageSharp);\n          return (\n            <div\n              key={id}\n              className=\"h-full shrink-0 min-w-0 basis-full p-12 cursor-pointer flex items-center content-center\"\n            >\n              {img ? <GatsbyImage image={img} alt=\"logo\" /> : null}\n            </div>\n          );\n        })}\n      </div>\n      <PrevButton onClick={scrollPrev} enabled={prevBtnEnabled} />\n      <NextButton onClick={scrollNext} enabled={nextBtnEnabled} />\n\n      <div className=\"z-10 absolute bottom-1 left-0 right-0 flex justify-center items-center\">\n        {scrollSnaps.map((_, index) => (\n          <DotButton\n            key={index}\n            selected={index === selectedIndex}\n            onClick={() => scrollTo(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ScreenshotsCarousel;\n","import React from \"react\";\n\nimport { HeadFC, PageProps, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { IProjectQueryResult } from \"../types/project.type\";\n\nimport ContentContainer from \"../components/contentContainer\";\nimport ProjectsSection from \"../components/projectsSection\";\nimport ScreenshotsCarousel from \"../components/screenshotsCarousel\";\nimport { LocalBusinessMetadata } from \"../components/metadata\";\n\nconst Project = ({\n  data: {\n    markdownRemark: { frontmatter, id },\n  },\n}: PageProps<IProjectQueryResult>) => {\n  const {\n    title,\n    challenge,\n    client,\n    clientDescription,\n    team,\n    screenshots,\n    stack,\n  } = frontmatter;\n  const cover = getImage(frontmatter.cover);\n  const clientLogo = getImage(frontmatter.clientLogo);\n\n  return (\n    <div itemScope itemType=\"https://schema.org/CreativeWork\">\n      {/* BANNER */}\n      <div\n        className={`w-full bg-secondary-70 min-h-96 flex flex-wrap p-5 md:px-40 justify-evenly items-center`}\n      >\n        <h2\n          className=\"text-bold text-5xl text-main-100 mb-8 grow-1 basis-full lg:basis-1/2 xl:basis-1/3\"\n          itemProp=\"description\"\n        >\n          {title}\n        </h2>\n        {cover ? (\n          <GatsbyImage\n            image={cover}\n            alt={title}\n            className=\"h-full object-cover\"\n            itemProp=\"image\"\n          />\n        ) : null}\n      </div>\n\n      {/* CLIENT */}\n      {client ? (\n        <section className=\"w-full bg-secondary-100 text-main-100 py-20\">\n          <ContentContainer className=\"flex-col items-center\">\n            <h3 className=\"text-5xl font-bold pb-6 md:pb-10\">Client</h3>\n\n            <div\n              className=\"flex flex-wrap justify-evenly w-full items-center\"\n              itemProp=\"sourceOrganization\"\n              itemScope\n              itemType=\"https://schema.org/Organization\"\n            >\n              <div className=\"grow-1 basis-full lg:basis-1/2 xl:basis-1/3\">\n                {clientLogo ? (\n                  <GatsbyImage\n                    image={clientLogo}\n                    alt={client}\n                    className=\"grayscale\"\n                    itemProp=\"logo\"\n                  />\n                ) : null}\n              </div>\n              <p\n                className=\"basis-full lg:basis-1/2 xl:basis-2/3 text-xl\"\n                itemProp=\"description\"\n              >\n                {clientDescription}\n              </p>\n            </div>\n          </ContentContainer>\n        </section>\n      ) : null}\n\n      {/* CHALLENGE */}\n      {challenge?.length ? (\n        <section className=\"w-full bg-main-100 text-secondary-100 py-20\">\n          <ContentContainer className=\"flex-col items-center\">\n            <h3 className=\"text-5xl font-bold pb-6 md:pb-10\">Challenge</h3>\n\n            <ul className=\"text-2xl leading-7 md:leading-10\">\n              {challenge.map((challenge, i) => (\n                <li key={i} className=\"list-inside list-disc\" itemProp=\"about\">\n                  {challenge}\n                </li>\n              ))}\n            </ul>\n          </ContentContainer>\n        </section>\n      ) : null}\n\n      {/* SOLUTION */}\n      <section className=\"w-full bg-secondary-100 text-main-100 py-20 border-b-2 border-secondary-30 border-solid\">\n        <ContentContainer className=\"flex-col items-center\">\n          <h3 className=\"text-5xl font-bold pb-6 md:pb-10\">Solution</h3>\n\n          {/* team */}\n          <h3 className=\"text-4xl font-bold pt-6 md:pt-10\">Engaged team</h3>\n          {team?.length ? (\n            <div className=\"flex flex-wrap justify-center w-full items-center\">\n              {team.map((member) => (\n                <div\n                  key={member}\n                  className=\"w-56 h-36 border-2 border-solid border-secondary-30 m-4 p-4 text-2xl flex justify-center items-center hover:scale-105 transition-all\"\n                >\n                  <p className=\"w-40 text-center\" itemProp=\"contributor\">\n                    {member}\n                  </p>\n                </div>\n              ))}\n            </div>\n          ) : null}\n\n          {/* stack */}\n          <h3 className=\"text-4xl font-bold pt-6 md:pt-10\">\n            Applied technologies\n          </h3>\n          <div className=\"flex flex-wrap justify-center w-full items-center\">\n            {stack.map((tech) => (\n              <div\n                key={tech}\n                className=\"w-56 h-36 border-2 border-solid border-secondary-30 m-4 p-4 text-2xl flex justify-center items-center hover:scale-105 transition-all\"\n              >\n                <p className=\"w-40 text-center\" itemProp=\"keywords\">\n                  {tech}\n                </p>\n              </div>\n            ))}\n          </div>\n        </ContentContainer>\n      </section>\n\n      {/* RESULT */}\n      {screenshots?.length ? (\n        <section className=\"w-full bg-secondary-100 text-main-100 py-20\">\n          <ContentContainer className=\"flex-col items-center\">\n            <h3 className=\"text-5xl font-bold pb-6 md:pb-10\">Result</h3>\n\n            <ScreenshotsCarousel screenshots={screenshots} />\n          </ContentContainer>\n        </section>\n      ) : null}\n\n      <ProjectsSection title={\"More projects\"} excludeId={id} />\n      <LocalBusinessMetadata itemProp=\"author\" />\n    </div>\n  );\n};\n\nexport default Project;\n\nexport const Head: HeadFC<IProjectQueryResult> = ({\n  data: {\n    markdownRemark: {\n      frontmatter: { title },\n    },\n  },\n}) => <title>CodeCave project: {title}</title>;\n\nexport const query = graphql`\n  query ($id: String) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      frontmatter {\n        date(formatString: \"MMM DD, YYYY\")\n        stack\n        title\n        challenge\n        client\n        clientDescription\n        clientLogo {\n          childImageSharp {\n            gatsbyImageData(\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n              height: 150\n            )\n          }\n        }\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n              height: 400\n            )\n          }\n        }\n        team\n        screenshots {\n          id\n          childImageSharp {\n            gatsbyImageData(\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n              height: 600\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["DotButton","_ref","selected","onClick","React","className","concat","type","PrevButton","_ref2","enabled","disabled","viewBox","fill","d","NextButton","_ref3","screenshots","emblaRef","emblaApi","useEmblaCarousel","loop","Autoplay","stopOnInteraction","stopOnMouseEnter","prevBtnEnabled","setPrevBtnEnabled","useState","nextBtnEnabled","setNextBtnEnabled","selectedIndex","setSelectedIndex","scrollSnaps","setScrollSnaps","scrollPrev","useCallback","scrollNext","scrollTo","index","onInit","scrollSnapList","onSelect","selectedScrollSnap","canScrollPrev","canScrollNext","useEffect","on","ref","map","id","childImageSharp","img","getImage","key","GatsbyImage","image","alt","_","data","markdownRemark","frontmatter","title","challenge","client","clientDescription","team","stack","cover","clientLogo","itemScope","itemType","itemProp","ContentContainer","length","i","member","tech","ScreenshotsCarousel","ProjectsSection","excludeId","LocalBusinessMetadata","Head"],"sourceRoot":""}