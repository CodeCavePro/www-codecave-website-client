{"version":3,"file":"component---src-templates-projects-tsx-2697e1bdbde0e02a2953.js","mappings":"4IAqDA,IA/CmBA,IAUZ,IAVa,QAClBC,EAAO,cACPC,EAAa,YACbC,EAAW,UACXC,GAMD,EACC,MAAMC,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAiB,CAACO,EAAGC,IAAMA,EAAI,IAC5DC,EAAWR,EAAc,EAE/B,OACES,EAAAA,cAAAA,MAAAA,CAAKR,UAAS,qCAAuCA,GAClDD,EAAcD,EACbU,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAE,IAAMb,EAAO,SAASU,EAAYP,UAAU,aAClDQ,EAAAA,cAACG,EAAAA,EAAM,CAACC,KAAK,QAAQC,QAAQ,OAAOb,UAAU,SAAQ,cAItD,KAEJQ,EAAAA,cAAAA,MAAAA,CAAKR,UAAU,2BACZF,EAAgB,EACbG,EAAMa,KAAKC,GACTP,EAAAA,cAACC,EAAAA,GAAI,CACHO,IAAG,mBAAqBD,EACxBL,GAAE,IAAMb,EAAO,SAASkB,GAExBP,EAAAA,cAACG,EAAAA,EAAM,CACLC,KAAK,QACLC,QAASE,IAAShB,EAAc,OAAS,QACzCkB,OAAQF,IAAShB,EACjBC,UAAU,aAETe,MAIP,MAEF,C,qHCAV,UArCiBnB,IAGyC,IAHxC,KAChBsB,EAAI,YACJC,GACmD,EACnD,MAAMC,EAAWF,EAAKG,kBAAkBC,OAClC,YAAEvB,EAAW,cAAED,GAAkBqB,EAEvC,OACEX,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACe,EAAAA,EAAM,CACLC,YAAY,OACZC,MAAM,oBACNC,KAAK,+BAEPlB,EAAAA,cAACmB,EAAAA,EAAgB,CAAC3B,UAAU,8BAC1BQ,EAAAA,cAAAA,MAAAA,CAAKR,UAAU,iCACZoB,EACGA,EAASN,KAAKc,GACZpB,EAAAA,cAACqB,EAAAA,EAAc,CACbb,IAAKY,EAAQE,GACbF,QAASA,EACTG,MAAM,OACN/B,UAAU,2CAGd,MAENQ,EAAAA,cAACwB,EAAAA,EAAU,CACTnC,QAAS,WACTC,cAAeA,EACfC,YAAaA,KAGhB,EAMA,MAAMkC,EAAe,IAAMzB,EAAAA,cAAAA,QAAAA,KAAO,oB","sources":["webpack://code-cave/./src/components/pagination.tsx","webpack://code-cave/./src/templates/projects.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport Button from \"./button\";\n\nconst Pagination = ({\n  section,\n  pagesQuantity,\n  currentPage,\n  className,\n}: {\n  section: \"projects\" | \"blog\";\n  pagesQuantity: number;\n  currentPage: number;\n  className?: string;\n}) => {\n  const pages = Array.from({ length: pagesQuantity }, (_, i) => i + 1);\n  const nextPage = currentPage + 1;\n\n  return (\n    <div className={`my-16 flex justify-between w-full ${className}`}>\n      {currentPage < pagesQuantity ? (\n        <Link to={`/${section}/page/${nextPage}`} className=\"basis-1/2\">\n          <Button size=\"large\" variant=\"dark\" className=\"w-max\">\n            NEXT PAGE\n          </Button>\n        </Link>\n      ) : null}\n\n      <nav className=\"w-full flex justify-end\">\n        {pagesQuantity > 1\n          ? pages.map((page) => (\n              <Link\n                key={`pagination-link-${page}`}\n                to={`/${section}/page/${page}`}\n              >\n                <Button\n                  size=\"small\"\n                  variant={page === currentPage ? \"dark\" : \"light\"}\n                  border={page !== currentPage}\n                  className=\"mx-[-1px]\"\n                >\n                  {page}\n                </Button>\n              </Link>\n            ))\n          : null}\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nimport { HeadFC, PageProps } from \"gatsby\";\nimport { graphql } from \"gatsby\";\n\nimport { IProjectsPageContext, IProjectsPageData } from \"../types/project.type\";\n\nimport Banner from \"../components/banner\";\nimport ContentContainer from \"../components/contentContainer\";\nimport ProjectPreview from \"../components/projectPreview\";\nimport Pagination from \"../components/pagination\";\n\nconst Projects = ({\n  data,\n  pageContext,\n}: PageProps<IProjectsPageData, IProjectsPageContext>) => {\n  const projects = data.allMarkdownRemark.nodes;\n  const { currentPage, pagesQuantity } = pageContext;\n\n  return (\n    <>\n      <Banner\n        heightClass=\"h-96\"\n        title=\"CodeCave projects\"\n        text=\"Our super amazing projects\"\n      />\n      <ContentContainer className=\"flex-col items-center p-12\">\n        <div className=\"flex flex-wrap justify-center\">\n          {projects\n            ? projects.map((project) => (\n                <ProjectPreview\n                  key={project.id}\n                  project={project}\n                  theme=\"dark\"\n                  className=\"basis-full md:basis-3/4 lg:basis-2/5\"\n                />\n              ))\n            : null}\n        </div>\n        <Pagination\n          section={\"projects\"}\n          pagesQuantity={pagesQuantity}\n          currentPage={currentPage}\n        />\n      </ContentContainer>\n    </>\n  );\n};\n\nexport default Projects;\n\nexport const Head: HeadFC = () => <title>CodeCave Projects</title>;\n\nexport const query = graphql`\n  query ($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"projects\" } } }\n      sort: { frontmatter: { date: DESC } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        id\n        frontmatter {\n          date(formatString: \"MMM DD, YYYY\")\n          title\n          text\n          stack\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                formats: [AUTO, WEBP, AVIF]\n                placeholder: BLURRED\n                width: 600\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","section","pagesQuantity","currentPage","className","pages","Array","from","length","_","i","nextPage","React","Link","to","Button","size","variant","map","page","key","border","data","pageContext","projects","allMarkdownRemark","nodes","Banner","heightClass","title","text","ContentContainer","project","ProjectPreview","id","theme","Pagination","Head"],"sourceRoot":""}