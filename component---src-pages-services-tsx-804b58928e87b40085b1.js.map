{"version":3,"file":"component---src-pages-services-tsx-804b58928e87b40085b1.js","mappings":"yMA+CA,OA1CsBA,EAAAA,EAAAA,aAGpB,CAAC,EAAyBC,KAAS,IAAlC,UAAEC,EAAS,SAAEC,GAAU,EACxB,MAAOC,EAAUC,IAAYC,EAAAA,EAAAA,GAC3B,CAAEC,MAAM,EAAMC,UAAU,EAAMC,SAAU,IAAOC,MAAO,GACtD,EACEC,EAAAA,EAAAA,GAAS,CACPC,MAAO,EACPC,mBAAmB,EACnBC,kBAAkB,MAKxB,OACEC,EAAAA,cAAAA,MAAAA,CACEb,UAAS,mBAAqBA,EAC9BD,IAAKG,EACLY,MAAO,CACLC,SAAU,WACVC,OAAQ,IACRC,WAAY,YACZC,UAAW,6BAGbL,EAAAA,cAAAA,MAAAA,CACEd,IAAKA,EACLC,UAAU,2BACVmB,aAAc,KACZhB,SAAAA,EAAUiB,iBAAiBC,UAAUC,MAAM,EAE7CC,aAAc,KACZpB,SAAAA,EAAUiB,iBAAiBC,UAAUG,OAAO,GAG7CvB,GAEC,ICfV,MAtBqB,KAAO,IAAD,IACzB,MAAMwB,GAAWC,EAAAA,EAAAA,IAAeC,GAC1BC,EAAUH,SAAwB,QAAhB,EAARA,EAAUI,sBAAc,OAAa,QAAb,EAAxBC,EAA0BC,mBAAW,WAA7B,EAARC,EAAuCC,MAEvD,OACEpB,EAAAA,cAAAA,UAAAA,CAASb,UAAS,8BAAiCkC,GAAG,WACpDrB,EAAAA,cAACsB,EAAa,CAACnC,UAAU,QACtB4B,EAAQQ,KAAKC,GACZxB,EAAAA,cAAAA,MAAAA,CACEyB,IAAKD,EACLrC,UAAU,sJAEVa,EAAAA,cAAC0B,IAAM,CAACvC,UAAS,4BACjBa,EAAAA,cAAAA,IAAAA,CAAGb,UAAU,6CAA6CqC,GAC1DxB,EAAAA,cAAC0B,IAAM,CAACvC,UAAS,gCAIf,EAMP,MAAM2B,EAAK,Y,0ICUlB,MApCuBa,IAMhB,IANiB,QACtBC,EAAO,UACPzC,GAID,EACC,MAAM,KACJ0C,EACAX,aAAa,MACXY,EACAC,OAASC,UAAWC,KAEpBL,EAEJ,OACE5B,EAAAA,cAAAA,MAAAA,CACEb,UAAS,0OAA4OA,EACrP+C,WAAS,EACTC,SAAS,8BAETnC,EAAAA,cAAAA,MAAAA,CAAKb,UAAU,qBACba,EAAAA,cAAAA,MAAAA,CAAKoC,IAAKH,EAAUI,IAAQP,EAAK,QAAS3C,UAAU,gBACpDa,EAAAA,cAAAA,KAAAA,CAAIb,UAAU,0BAA0BmD,SAAS,eAC9CR,IAGL9B,EAAAA,cAAAA,MAAAA,CACEb,UAAS,0BACToD,wBAAyB,CAAEC,OAAQX,GACnCS,SAAS,gBAEP,E,SCKV,MA7BiB,KAAM,QACrB,MAAMG,GAAe5B,EAAAA,EAAAA,IAAeC,GACpC,IAAI4B,EACFD,SAA+B,QAAnB,EAAZA,EAAcE,yBAAiB,OAAO,QAAP,EAA/BC,EAAiCC,aAAK,OAAtCC,EAAwCC,OACpCN,EAAaE,kBAAkBE,MAC/B,KAGN,OACE7C,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACgD,EAAAA,EAAM,CACLC,YAAY,QACZnB,MAAM,kCACNoB,KAAK,KAEPlD,EAAAA,cAACmD,EAAAA,EAAY,MACbnD,EAAAA,cAAAA,MAAAA,CAAKb,UAAU,eACba,EAAAA,cAACoD,EAAAA,EAAgB,CAACjE,UAAU,8BAC1Ba,EAAAA,cAAAA,MAAAA,CAAKb,UAAU,8CACZuD,EACGA,EAASnB,KAAKK,GAAY5B,EAAAA,cAACqD,EAAc,CAACzB,QAASA,MACnD,QAIT,EAMA,MAAM0B,EAAe,IAAMtD,EAAAA,cAAAA,QAAAA,KAAO,qBAEnCc,EAAQ,Y","sources":["webpack://code-cave/./src/components/stack/stackCarousel.tsx","webpack://code-cave/./src/components/stack/stackSection.tsx","webpack://code-cave/./src/components/services/servicePreview.tsx","webpack://code-cave/./src/pages/services.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\n\nimport useEmblaCarousel from \"embla-carousel-react\";\nimport Autoplay from \"embla-carousel-autoplay\";\n\nconst StackCarousel = forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<{ className?: string }>\n>(({ className, children }, ref) => {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, dragFree: true, duration: 10000, align: 0 },\n    [\n      Autoplay({\n        delay: 0,\n        stopOnInteraction: false,\n        stopOnMouseEnter: true,\n      }),\n    ]\n  );\n\n  return (\n    <div\n      className={`overflow-hidden ${className}`}\n      ref={emblaRef}\n      style={{\n        position: \"relative\",\n        zIndex: 199,\n        willChange: \"transform\",\n        transform: \"translate3d(0, 0, 199px)\",\n      }}\n    >\n      <div\n        ref={ref}\n        className=\"h-full flex items-center\"\n        onMouseEnter={() => {\n          emblaApi?.internalEngine().animation.stop();\n        }}\n        onMouseLeave={() => {\n          emblaApi?.internalEngine().animation.start();\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n});\n\nexport default StackCarousel;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Border from \"../../assets/common/border.svg\";\nimport StackCarousel from \"./stackCarousel\";\n\nconst StackSection = () => {\n  const techData = useStaticQuery(query);\n  const techArr = techData?.markdownRemark?.frontmatter?.stack as string[];\n\n  return (\n    <section className={`h-28 flex flex-col relative`} id=\"clients\">\n      <StackCarousel className=\"grow\">\n        {techArr.map((tech) => (\n          <div\n            key={tech}\n            className=\"h-full shrink-0 min-w-0 cursor-pointer flex flex-col justify-between items-center content-center w-[352px] md:w-[400px] xl:w-[480px] 3xl:w-[576px]\"\n          >\n            <Border className={`min-w-0 shrink-0 w-full`} />\n            <p className=\"text-4xl font-extrabold whitespace-nowrap\">{tech}</p>\n            <Border className={`min-w-0 shrink-0 w-full`} />\n          </div>\n        ))}\n      </StackCarousel>\n    </section>\n  );\n};\n\nexport default StackSection;\n\nexport const query = graphql`\n  query {\n    markdownRemark(fields: { sourceName: { eq: \"stack\" } }) {\n      frontmatter {\n        stack\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { IServicePreview } from \"../../types/services.type\";\n\nconst ServicePreview = ({\n  service,\n  className,\n}: {\n  service: IServicePreview;\n  className?: string;\n}) => {\n  const {\n    html,\n    frontmatter: {\n      title,\n      image: { publicURL: imageURL },\n    },\n  } = service;\n\n  return (\n    <div\n      className={`flex flex-col grow-1 rounded-2xl p-10 basis-full md:basis-3/4 lg:basis-2/5 m-5 border-4 border-secondary-100 border-solid text-secondary-100 cursor-pointer bg-main-100 hover:invert hover:border-main-100 transition-all duration-300 ${className}`}\n      itemScope\n      itemType=\"https://schema.org/Service\"\n    >\n      <div className=\"flex items-center\">\n        <img src={imageURL} alt={`${title} logo`} className=\"mr-7 invert\" />\n        <h4 className=\"font-extrabold text-2xl\" itemProp=\"serviceType\">\n          {title}\n        </h4>\n      </div>\n      <div\n        className={`service-preview text-xl`}\n        dangerouslySetInnerHTML={{ __html: html }}\n        itemProp=\"description\"\n      ></div>\n    </div>\n  );\n};\n\nexport default ServicePreview;\n","import React from \"react\";\n\nimport { HeadFC, useStaticQuery } from \"gatsby\";\nimport { graphql } from \"gatsby\";\n\nimport { IServicePreview } from \"../types/services.type\";\n\nimport Banner from \"../components/common/banner\";\nimport ContentContainer from \"../components/common/contentContainer\";\nimport ServicePreview from \"../components/services/servicePreview\";\nimport StackSection from \"../components/stack/stackSection\";\n\nconst Services = () => {\n  const servicesData = useStaticQuery(query);\n  let services = (\n    servicesData?.allMarkdownRemark?.nodes?.length\n      ? servicesData.allMarkdownRemark.nodes\n      : null\n  ) as IServicePreview[] | null;\n\n  return (\n    <>\n      <Banner\n        heightClass=\"h-136\"\n        title=\"our expertise is your advantage\"\n        text=\"\"\n      />\n      <StackSection />\n      <div className=\"bg-main-100\">\n        <ContentContainer className=\"flex-col items-center p-12\">\n          <div className=\"flex flex-wrap w-full justify-around py-14\">\n            {services\n              ? services.map((service) => <ServicePreview service={service} />)\n              : null}\n          </div>\n        </ContentContainer>\n      </div>\n    </>\n  );\n};\n\nexport default Services;\n\nexport const Head: HeadFC = () => <title>CodeCave Services</title>;\n\nconst query = graphql`\n  query {\n    allMarkdownRemark(filter: { fields: { sourceName: { eq: \"services\" } } }) {\n      nodes {\n        id\n        html\n        frontmatter {\n          title\n          image {\n            publicURL\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["forwardRef","ref","className","children","emblaRef","emblaApi","useEmblaCarousel","loop","dragFree","duration","align","Autoplay","delay","stopOnInteraction","stopOnMouseEnter","React","style","position","zIndex","willChange","transform","onMouseEnter","internalEngine","animation","stop","onMouseLeave","start","techData","useStaticQuery","query","techArr","markdownRemark","_techData$markdownRem","frontmatter","_techData$markdownRem2","stack","id","StackCarousel","map","tech","key","Border","_ref","service","html","title","image","publicURL","imageURL","itemScope","itemType","src","alt","itemProp","dangerouslySetInnerHTML","__html","servicesData","services","allMarkdownRemark","_servicesData$allMark","nodes","_servicesData$allMark2","length","Banner","heightClass","text","StackSection","ContentContainer","ServicePreview","Head"],"sourceRoot":""}