{"version":3,"file":"component---src-pages-index-tsx-a2218dea0e0448dab5a1.js","mappings":"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","sources":["webpack://code-cave/./src/components/banner.tsx","webpack://code-cave/./src/components/postPreview.tsx","webpack://code-cave/./src/components/stackSection.tsx","webpack://code-cave/./src/components/review.tsx","webpack://code-cave/./src/components/reviewsSection.tsx","webpack://code-cave/./src/components/postSection.tsx","webpack://code-cave/./src/pages/index.tsx","webpack://code-cave/./src/assets/common/chat-right-quote.svg"],"sourcesContent":["import React from \"react\";\n\nimport ContentContainer from \"./contentContainer\";\n\nconst Banner = ({\n  heightClass = \"h-160\",\n  title,\n  text,\n}: {\n  heightClass?: string;\n  title: string;\n  text: string;\n}) => {\n  return (\n    <div\n      className={`w-full bg-main-100 relative overflow-hidden ${heightClass}`}\n    >\n      <ContentContainer\n        className={`h-full flex-col items-left justify-center overflow-hidden text-secondary-100`}\n      >\n        <h2 className=\"font-['Rubik_Glitch'] text-6xl mb-8 w-2/5\">{title}</h2>\n        <p className=\"max-w-xl w-full text-4xl font-light\">{text}</p>\n      </ContentContainer>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport { IPostPreviewQueryResult } from \"../types/post.type\";\nimport { LocalBusinessMetadata } from \"./metadata\";\n\nimport Quote from \"../assets/common/chat-right-quote.svg\";\n\nconst PostPreview = ({\n  post,\n  className,\n  fontColor,\n}: {\n  post: IPostPreviewQueryResult;\n  className?: string;\n  fontColor: \"main\" | \"secondary\";\n}) => {\n  const { date, title, text } = post.frontmatter;\n\n  const fontColorClass100 =\n    fontColor === \"main\" ? \"text-main-100\" : \"text-secondary-100\";\n  const fontColorClass10 =\n    fontColor === \"main\" ? \"text-main-10\" : \"text-secondary-10\";\n  const fontColorHover =\n    fontColor === \"main\" ? \"hover:text-main-100\" : \"hover:text-secondary-100\";\n\n  return (\n    <Link\n      to={`/blog/${post.id}`}\n      className={`flex w-full ${fontColorClass10} ${fontColorHover} ${className}`}\n      itemScope\n      itemType=\"https://schema.org/Article\"\n    >\n      <div\n        className=\"hidden md:flex md:basis-1/3 shrink-0 justify-center p-6\"\n        itemProp=\"image\"\n      >\n        <Quote className={fontColor === \"secondary\" ? \"\" : \"brightness-0\"} />\n      </div>\n      <div className=\" pl-12 flex flex-col basis-1/2 md:basis-1/3 shrink-0\">\n        <p className={`text-3xl font-light ${fontColorClass10} pb-5`}>{date}</p>\n        <h3\n          className={`text-4xl font-bold ${fontColorClass100}`}\n          itemProp=\"headline\"\n        >\n          {title}\n        </h3>\n      </div>\n      <div className=\"flex flex-col basis-1/2 md:basis-1/3 shrink-0\">\n        <p\n          className={`font-normal text-2xl leading-[1.375rem] ${fontColorClass10}`}\n          itemProp=\"abstract\"\n        >\n          {text.split(\" \").slice(0, 40).join(\" \")}...\n        </p>\n        <p className={`text-2xl font-bold pt-6`}>Read more</p>\n      </div>\n      <LocalBusinessMetadata itemProp=\"copyrightHolder\" />\n    </Link>\n  );\n};\n\nexport default PostPreview;\n","import React from \"react\";\n\nimport useEmblaCarousel from \"embla-carousel-react\";\nimport Autoplay from \"embla-carousel-autoplay\";\n\nconst StackSection = () => {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, dragFree: true, duration: 10000, align: 0 },\n    [\n      Autoplay({\n        delay: 0,\n        stopOnInteraction: false,\n        stopOnMouseEnter: true,\n      }),\n    ]\n  );\n\n  const techArr = [\n    \"AR\",\n    \"CAD ADDINS\",\n    \"PLM\",\n    \"UX/UI\",\n    \"QUALITY ASSURANCE\",\n    \"3D\",\n    \"ETL\",\n    \"WEB DEVELOPMENT\",\n    \"MOBILE APP\",\n  ];\n\n  return (\n    <section className={`h-28`} id=\"clients\">\n      <div className=\"h-full overflow-hidden\" ref={emblaRef}>\n        <div\n          className=\"h-full flex items-center\"\n          onMouseEnter={() => {\n            emblaApi?.internalEngine().animation.stop();\n          }}\n          onMouseLeave={() => {\n            emblaApi?.internalEngine().animation.start();\n          }}\n        >\n          {techArr.map((tech) => (\n            <div\n              key={tech}\n              className=\"h-full shrink-0 min-w-0 px-24 2xl:px-36 -mx-2 cursor-pointer flex items-center content-center border-y-8 border-dashed\"\n            >\n              <p className=\"text-4xl font-extrabold whitespace-nowrap\">\n                {tech}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default StackSection;\n","import React from \"react\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { IReview } from \"../types/review.type\";\n\nconst Review = ({\n  data: { company, person, position, location, text, image },\n}: {\n  data: IReview;\n}) => {\n  const avatar = getImage(image);\n\n  return (\n    <div\n      className=\"flex flex-row flex-nowrap p-6 text-main-100  my-2\"\n      itemProp=\"review\"\n      itemScope\n      itemType=\"https://schema.org/Review\"\n    >\n      <div\n        className=\"basis-1/3 p-2 flex flex-col items-center justify-center\"\n        itemProp=\"author\"\n        itemScope\n        itemType=\"https://schema.org/Person\"\n      >\n        <div\n          className={`rounded-full h-28 w-28 mx-auto mb-8 overflow-hidden flex justify-center items-center`}\n        >\n          {avatar ? (\n            <GatsbyImage\n              image={avatar}\n              alt={company}\n              className=\"h-full object-cover\"\n              itemProp=\"image\"\n            />\n          ) : null}\n        </div>\n        <h5 className=\"text-xl font-extrabold\" itemProp=\"familyName\">\n          {person}\n        </h5>\n        <h5 className=\"text-xl font-extrabold\">\n          <span itemProp=\"jobTitle\">{position}</span>,{\" \"}\n          <span itemProp=\"worksFor\">{company}</span>\n        </h5>\n        <h5 className=\"text-xl font-extrabold\" itemProp=\"workLocation\">\n          {location}\n        </h5>\n      </div>\n      <div\n        className=\"shrink-0 basis-2/3 p-2 font-normal text-2xl leading-[1.375rem]\"\n        itemProp=\"reviewBody\"\n      >\n        {text}\n      </div>\n    </div>\n  );\n};\n\nexport default Review;\n","import React from \"react\";\n\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport useEmblaCarousel from \"embla-carousel-react\";\nimport Autoplay from \"embla-carousel-autoplay\";\n\nimport { IReviewsQueryResult } from \"../types/review.type\";\n\nimport Review from \"./review\";\nimport TemplateSection from \"./templateSection\";\n\nconst ReviewsSection = () => {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, dragFree: true, duration: 30000, align: 0 },\n    [\n      Autoplay({\n        delay: 0,\n        stopOnInteraction: false,\n        stopOnMouseEnter: true,\n      }),\n    ]\n  );\n\n  const reviewsData = useStaticQuery(query);\n\n  const reviews = (\n    reviewsData?.allMarkdownRemark?.nodes?.length\n      ? reviewsData.allMarkdownRemark.nodes\n      : null\n  ) as IReviewsQueryResult[] | null;\n\n  return (\n    <>\n      {reviews ? (\n        <TemplateSection\n          fullWidth\n          title={\"our clients' testimonials\"}\n          className=\"bg-secondary-100 text-main-100 border-y-8 border-dashed border-main-100 w-full overflow-hidden\"\n        >\n          <div className=\"w-full overflow-hidden\" ref={emblaRef}>\n            <div\n              id=\"container\"\n              className=\"flex items-center\"\n              onMouseEnter={() => {\n                emblaApi?.internalEngine().animation.stop();\n              }}\n              onMouseLeave={() => {\n                emblaApi?.internalEngine().animation.start();\n              }}\n            >\n              {reviews.map(({ id, frontmatter }) => (\n                <div\n                  key={id}\n                  className=\"h-full shrink-0 min-w-0 cursor-pointer flex items-center content-center basis-full sm:basis-5/6 md:basis-4/6 lg:basis-1/2 xl:basis-2/5 3xl:basis-1/3 4xl:basis-1/4\"\n                >\n                  {<Review data={frontmatter} />}\n                </div>\n              ))}\n            </div>\n          </div>\n        </TemplateSection>\n      ) : null}\n    </>\n  );\n};\n\nexport default ReviewsSection;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { fields: { sourceName: { eq: \"reviews\" } } }) {\n      nodes {\n        id\n        frontmatter {\n          company\n          location\n          person\n          position\n          text\n          image {\n            childImageSharp {\n              gatsbyImageData(\n                height: 112\n                placeholder: BLURRED\n                formats: [AUTO, AVIF, WEBP]\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport { IPostPreviewQueryResult } from \"../types/post.type\";\n\nimport PostPreview from \"./postPreview\";\nimport TemplateSection from \"./templateSection\";\n\nconst PostSection = () => {\n  const postData = useStaticQuery(query);\n\n  const post = (\n    postData?.allMarkdownRemark?.nodes?.length\n      ? postData.allMarkdownRemark.nodes[0]\n      : null\n  ) as IPostPreviewQueryResult | null;\n\n  return (\n    <>\n      {post ? (\n        <TemplateSection\n          title=\"new in our blog\"\n          linkTitle=\"all posts\"\n          section=\"blog\"\n          className=\"bg-main-100 text-secondary-100\"\n        >\n          <PostPreview post={post} fontColor=\"secondary\" />\n        </TemplateSection>\n      ) : null}\n    </>\n  );\n};\n\nexport default PostSection;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"posts\" } } }\n      sort: { frontmatter: { date: DESC } }\n      limit: 1\n    ) {\n      nodes {\n        id\n        frontmatter {\n          date(formatString: \"MMM DD, YYYY\")\n          author\n          title\n          text\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\n\nimport { IconContext } from \"@react-icons/all-files\";\nimport \"../styles/styles.css\";\n\nimport Banner from \"../components/banner\";\nimport StackSection from \"../components/stackSection\";\nimport ReviewsSection from \"../components/reviewsSection\";\nimport PostSection from \"../components/postSection\";\nimport ProjectsSection from \"../components/projectsSection\";\n\nconst IndexPage = () => {\n  return (\n    <IconContext.Provider value={{ style: { verticalAlign: \"middle\" } }}>\n      <Banner title=\"OUTSTANDING OUTSOURCING\" text=\"THE BEST DEVELOPERS EVER\" />\n      <StackSection />\n      <ProjectsSection />\n      <ReviewsSection />\n      <PostSection />\n    </IconContext.Provider>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>CodeCave</title>;\n","var React = require('react');\n\nfunction ChatRightQuote (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"clipRule\":\"evenodd\",\"d\":\"M15.875 7.9375H111.125C113.23 7.9375 115.249 8.77377 116.738 10.2623C118.226 11.7509 119.062 13.7698 119.062 15.875V107.839L103.188 91.9639C100.211 88.9865 96.1738 87.3134 91.9639 87.3125H15.875C13.7698 87.3125 11.7509 86.4762 10.2623 84.9877C8.77377 83.4991 7.9375 81.4802 7.9375 79.375V15.875C7.9375 13.7698 8.77377 11.7509 10.2623 10.2623C11.7509 8.77377 13.7698 7.9375 15.875 7.9375ZM111.125 0C115.335 0 119.373 1.67254 122.35 4.64968C125.327 7.62682 127 11.6647 127 15.875V117.419C127 118.205 126.767 118.972 126.33 119.625C125.893 120.278 125.273 120.786 124.547 121.086C123.822 121.386 123.023 121.464 122.253 121.31C121.483 121.156 120.776 120.777 120.221 120.221L97.5757 97.5757C96.0875 96.087 94.0689 95.2505 91.9639 95.25H15.875C11.6647 95.25 7.62682 93.5775 4.64968 90.6003C1.67254 87.6232 0 83.5853 0 79.375V15.875C0 11.6647 1.67254 7.62682 4.64968 4.64968C7.62682 1.67254 11.6647 0 15.875 0L111.125 0Z\",\"fill\":\"#FAFAFA\",\"key\":0}),React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"clipRule\":\"evenodd\",\"d\":\"M56.0865 37.7825C54.5404 35.3747 52.2544 33.5337 49.5723 32.5363C46.8902 31.5389 43.9569 31.439 41.2131 32.2515C38.4694 33.0641 36.0635 34.7453 34.357 37.0423C32.6506 39.3394 31.7358 42.1283 31.7502 44.9898C31.7516 47.3594 32.3893 49.6851 33.5968 51.7241C34.8042 53.763 36.537 55.4402 38.6142 56.5806C40.6914 57.721 43.0367 58.2826 45.4051 58.2069C47.7735 58.1311 50.0781 57.4207 52.0781 56.1499C51.0383 59.2376 49.1015 62.5316 45.9107 65.8336C45.3002 66.4652 44.9656 67.3134 44.9804 68.1916C44.9953 69.0699 45.3585 69.9063 45.99 70.5168C46.6216 71.1273 47.4698 71.4619 48.348 71.447C49.2263 71.4321 50.0627 71.0689 50.6732 70.4374C62.4683 58.2136 60.9364 44.9263 56.0865 37.7984V37.7825ZM87.8365 37.7825C86.2904 35.3747 84.0044 33.5337 81.3223 32.5363C78.6403 31.5389 75.7069 31.439 72.9631 32.2515C70.2194 33.0641 67.8135 34.7453 66.107 37.0423C64.4006 39.3394 63.4858 42.1283 63.5002 44.9898C63.5016 47.3594 64.1393 49.6851 65.3468 51.7241C66.5542 53.763 68.287 55.4402 70.3642 56.5806C72.4414 57.721 74.7867 58.2826 77.1551 58.2069C79.5235 58.1311 81.8281 57.4207 83.8281 56.1499C82.7883 59.2376 80.8515 62.5316 77.6607 65.8336C77.0502 66.4652 76.7156 67.3134 76.7304 68.1916C76.7453 69.0699 77.1085 69.9063 77.74 70.5168C78.3716 71.1273 79.2198 71.4619 80.098 71.447C80.9763 71.4321 81.8127 71.0689 82.4232 70.4374C94.2183 58.2136 92.6864 44.9263 87.8365 37.7984V37.7825Z\",\"fill\":\"#FAFAFA\",\"key\":1})]);\n}\n\nChatRightQuote.defaultProps = {\"width\":\"127\",\"height\":\"127\",\"viewBox\":\"0 0 127 127\",\"fill\":\"none\"};\n\nmodule.exports = ChatRightQuote;\n\nChatRightQuote.default = ChatRightQuote;\n"],"names":["_ref","heightClass","title","text","React","className","ContentContainer","post","fontColor","date","frontmatter","fontColorClass100","fontColorClass10","fontColorHover","Link","to","id","itemScope","itemType","itemProp","Quote","split","slice","join","LocalBusinessMetadata","emblaRef","emblaApi","useEmblaCarousel","loop","dragFree","duration","align","Autoplay","delay","stopOnInteraction","stopOnMouseEnter","ref","onMouseEnter","internalEngine","animation","stop","onMouseLeave","start","map","tech","key","data","company","person","position","location","image","avatar","getImage","GatsbyImage","alt","reviewsData","useStaticQuery","query","reviews","allMarkdownRemark","_reviewsData$allMarkd","nodes","_reviewsData$allMarkd2","length","TemplateSection","fullWidth","Review","postData","_postData$allMarkdown","_postData$allMarkdown2","linkTitle","section","PostPreview","IconContext","value","style","verticalAlign","Banner","StackSection","ProjectsSection","ReviewsSection","PostSection","Head","ChatRightQuote","props","createElement","defaultProps","module","exports","default"],"sourceRoot":""}